package posix

// Command is information about POSIX commands
type Command struct {
	// Name is command name
	Name string
	// Desc is description for command
	Desc string
	// Type is "required", "optional", or "shell built-in"
	Type string
}

// Commands return posix commands list.
func Commands() []Command {
	return []Command{
		{Name: "alias", Desc: "define or display aliases", Type: "shell built-in"},
		{Name: "bg", Desc: "run jobs in the background", Type: "shell built-in"},
		{Name: "cd", Desc: "change the working directory", Type: "shell built-in"},
		{Name: "command", Desc: "execute a simple command", Type: "shell built-in"},
		{Name: "echo", Desc: "write arguments to standard output", Type: "shell built-in"},
		{Name: "false", Desc: "return false value", Type: "shell built-in"},
		{Name: "fc", Desc: "process the command history list", Type: "shell built-in"},
		{Name: "fg", Desc: "run jobs in the foreground", Type: "shell built-in"},
		{Name: "getopts", Desc: "parse utility options", Type: "shell built-in"},
		{Name: "hash", Desc: "remember or report utility locations", Type: "shell built-in"},
		{Name: "jobs", Desc: "display status of jobs in the current session", Type: "shell built-in"},
		{Name: "kill", Desc: "terminate or signal processes", Type: "shell built-in"},
		{Name: "printf", Desc: "write formatted output", Type: "shell built-in"},
		{Name: "pwd", Desc: "return working directory name", Type: "shell built-in"},
		{Name: "read", Desc: "read a line from standard input", Type: "shell built-in"},
		{Name: "test", Desc: "evaluate expression", Type: "shell built-in"},
		{Name: "true", Desc: "return true value", Type: "shell built-in"},
		{Name: "type", Desc: "write a description of command type", Type: "shell built-in"},
		{Name: "ulimit", Desc: "set or report file size limit", Type: "shell built-in"},
		{Name: "umask", Desc: "get or set the file mode creation mask", Type: "shell built-in"},
		{Name: "unalias", Desc: "remove alias definitions", Type: "shell built-in"},
		{Name: "wait", Desc: "await process completion", Type: "shell built-in"},

		{Name: "ar", Desc: "create and maintain library archives", Type: "required"},
		{Name: "at", Desc: "execute commands at a later time", Type: "required"},
		{Name: "awk", Desc: "pattern scanning and processing language", Type: "required"},
		{Name: "basename", Desc: "return non-directory portion of a pathname", Type: "required"},
		{Name: "batch", Desc: "schedule commands to be executed in a batch queue", Type: "required"},
		{Name: "bc", Desc: "arbitrary-precision arithmetic language", Type: "required"},
		{Name: "cat", Desc: "concatenate and print files", Type: "required"},
		{Name: "chgrp", Desc: "change the file group ownership", Type: "required"},
		{Name: "chmod", Desc: "change the file modes", Type: "required"},
		{Name: "chown", Desc: "change the file ownership", Type: "required"},
		{Name: "cksum", Desc: "write file checksums and sizes", Type: "required"},
		{Name: "cmp", Desc: "compare two files", Type: "required"},
		{Name: "comm", Desc: "select or reject lines common to two files", Type: "required"},
		{Name: "cp", Desc: "copy files", Type: "required"},
		{Name: "crontab", Desc: "schedule periodic background work", Type: "required"},
		{Name: "csplit", Desc: "split files based on context", Type: "required"},
		{Name: "cut", Desc: "cut out selected fields of each line of a file", Type: "required"},
		{Name: "date", Desc: "write the date and time", Type: "required"},
		{Name: "dd", Desc: "convert and copy a file", Type: "required"},
		{Name: "df", Desc: "report free disk space", Type: "required"},
		{Name: "diff", Desc: "compare two files", Type: "required"},
		{Name: "dirname", Desc: "return the directory portion of a pathname", Type: "required"},
		{Name: "du", Desc: "estimate file space usage", Type: "required"},
		{Name: "ed", Desc: "edit text", Type: "required"},
		{Name: "env", Desc: "set the environment for command invocation", Type: "required"},
		{Name: "expand", Desc: "convert tabs to spaces", Type: "required"},
		{Name: "expr", Desc: "evaluate arguments as an expression", Type: "required"},
		{Name: "file", Desc: "determine file type", Type: "required"},
		{Name: "find", Desc: "find files", Type: "required"},
		{Name: "fold", Desc: "filter for folding lines", Type: "required"},
		{Name: "gencat", Desc: "generate a formatted message catalog", Type: "required"},
		{Name: "getconf", Desc: "get configuration values", Type: "required"},
		{Name: "grep", Desc: "search a file for a pattern", Type: "required"},
		{Name: "head", Desc: "copy the first part of files", Type: "required"},
		{Name: "iconv", Desc: "codeset conversion", Type: "required"},
		{Name: "id", Desc: "return user identity", Type: "required"},
		{Name: "join", Desc: "relational database operator", Type: "required"},
		{Name: "ln", Desc: "link files", Type: "required"},
		{Name: "locale", Desc: "get locale-specific information", Type: "required"},
		{Name: "localedef", Desc: "define locale environment", Type: "required"},
		{Name: "logger", Desc: "log messages", Type: "required"},
		{Name: "logname", Desc: "return the user's login name", Type: "required"},
		{Name: "lp", Desc: "send files to a printer", Type: "required"},
		{Name: "ls", Desc: "list directory contents", Type: "required"},
		{Name: "m4", Desc: "macro processor", Type: "required"},
		{Name: "mailx", Desc: "process messages", Type: "required"},
		{Name: "man", Desc: "display system documentation", Type: "required"},
		{Name: "mesg", Desc: "permit or deny messages", Type: "required"},
		{Name: "mkdir", Desc: "make directories", Type: "required"},
		{Name: "mkfifo", Desc: "make FIFO special files", Type: "required"},
		{Name: "mv", Desc: "move files", Type: "required"},
		{Name: "newgrp", Desc: "change to a new group", Type: "required"},
		{Name: "nice", Desc: "invoke a utility with an altered nice value", Type: "required"},
		{Name: "nohup", Desc: "invoke a utility immune to hangups", Type: "required"},
		{Name: "od", Desc: "dump files in various formats", Type: "required"},
		{Name: "paste", Desc: "merge corresponding or subsequent lines of files", Type: "required"},
		{Name: "patch", Desc: "apply changes to files", Type: "required"},
		{Name: "pathchk", Desc: "check pathnames", Type: "required"},
		{Name: "pax", Desc: "portable archive interchange", Type: "required"},
		{Name: "pr", Desc: "print files", Type: "required"},
		{Name: "ps", Desc: "report process status", Type: "required"},
		{Name: "renice", Desc: "set nice values of running processes", Type: "required"},
		{Name: "rm", Desc: "remove directory entries", Type: "required"},
		{Name: "rmdir", Desc: "remove directories", Type: "required"},
		{Name: "sed", Desc: "stream editor", Type: "required"},
		{Name: "sh", Desc: "shell, the standard command language interpreter", Type: "required"},
		{Name: "sleep", Desc: "suspend execution for an interval", Type: "required"},
		{Name: "sort", Desc: "sort, merge, or sequence check text files", Type: "required"},
		{Name: "split", Desc: "split files into pieces", Type: "required"},
		{Name: "strings", Desc: "find printable strings in files", Type: "required"},
		{Name: "stty", Desc: "set the options for a terminal", Type: "required"},
		{Name: "tabs", Desc: "set terminal tabs", Type: "required"},
		{Name: "tail", Desc: "copy the last part of a file", Type: "required"},
		{Name: "tee", Desc: "duplicate standard input", Type: "required"},
		{Name: "time", Desc: "time a simple command", Type: "required"},
		{Name: "touch", Desc: "change file access and modification times", Type: "required"},
		{Name: "tput", Desc: "change terminal characteristics", Type: "required"},
		{Name: "tr", Desc: " translate characters", Type: "required"},
		{Name: "tsort", Desc: "topological sort", Type: "required"},
		{Name: "tty", Desc: "return user's terminal name", Type: "required"},
		{Name: "uname", Desc: "return system name", Type: "required"},
		{Name: "unexpand", Desc: "convert spaces to tabs", Type: "required"},
		{Name: "uniq", Desc: "report or filter out repeated lines in a file", Type: "required"},
		{Name: "uudecode", Desc: "decode a binary file", Type: "required"},
		{Name: "uuencode", Desc: "encode a binary file", Type: "required"},
		{Name: "wc", Desc: "word, line, and byte or character count", Type: "required"},
		{Name: "who", Desc: "display who is on the system", Type: "required"},
		{Name: "write", Desc: "write to another user", Type: "required"},
		{Name: "xargs", Desc: "construct argument lists and invoke utility", Type: "required"},

		{Name: "admin", Desc: "create and administer SCCS files", Type: "optional"},
		{Name: "asa", Desc: "interpret carriage-control characters", Type: "optional"},
		{Name: "c99", Desc: "compile standard C programs", Type: "optional"},
		{Name: "cal", Desc: "print a calendar", Type: "optional"},
		{Name: "cflow", Desc: "generate a C-language flowgraph", Type: "optional"},
		{Name: "compress", Desc: "compress data", Type: "optional"},
		{Name: "ctags", Desc: "create a tags file", Type: "optional"},
		{Name: "cxref", Desc: "generate a C-language program cross-reference table", Type: "optional"},
		{Name: "delta", Desc: "make a delta (change) to an SCCS file", Type: "optional"},
		{Name: "ex", Desc: "text editor", Type: "optional"},
		{Name: "fort77", Desc: "FORTRAN compiler ", Type: "optional"},
		{Name: "fuser", Desc: "list process IDs of all processes that have one or more files open", Type: "optional"},
		{Name: "get", Desc: "get a version of an SCCS file", Type: "optional"},
		{Name: "ipcrm", Desc: "remove an XSI message queue, semaphore set, or shared memory segment identifier", Type: "optional"},
		{Name: "ipcs", Desc: "report XSI interprocess communication facilities status", Type: "optional"},
		{Name: "lex", Desc: "generate programs for lexical tasks ", Type: "optional"},
		{Name: "link", Desc: "call link function", Type: "optional"},
		{Name: "make", Desc: "maintain, update, and regenerate groups of programs", Type: "optional"},
		{Name: "more", Desc: "display files on a page-by-page basis", Type: "optional"},
		{Name: "nl", Desc: "line numbering filter", Type: "optional"},
		{Name: "nm", Desc: "write the name list of an object file", Type: "optional"},
		{Name: "prs", Desc: "print an SCCS file", Type: "optional"},
		{Name: "qalter", Desc: "alter batch job", Type: "optional"},
		{Name: "qdel", Desc: "delete batch jobs", Type: "optional"},
		{Name: "qhold", Desc: "hold batch jobs", Type: "optional"},
		{Name: "qmove", Desc: "move batch jobs", Type: "optional"},
		{Name: "qmsg", Desc: "send message to batch jobs", Type: "optional"},
		{Name: "qrerun", Desc: "rerun batch jobs", Type: "optional"},
		{Name: "qrls", Desc: "release batch jobs", Type: "optional"},
		{Name: "qselect", Desc: "select batch jobs", Type: "optional"},
		{Name: "qsig", Desc: "signal batch jobs", Type: "optional"},
		{Name: "qstat", Desc: "show status of batch jobs", Type: "optional"},
		{Name: "qsub", Desc: "submit a script", Type: "optional"},
		{Name: "sact", Desc: "print current SCCS file-editing activity", Type: "optional"},
		{Name: "sccs", Desc: "front end for the SCCS subsystem ", Type: "optional"},
		{Name: "rmdel", Desc: "remove a delta from an SCCS file", Type: "optional"},
		{Name: "strip", Desc: "remove unnecessary information from strippable files", Type: "optional"},
		{Name: "talk", Desc: "talk to another user", Type: "optional"},
		{Name: "uncompress", Desc: "expand compressed data", Type: "optional"},
		{Name: "unget", Desc: "undo a previous get of an SCCS file", Type: "optional"},
		{Name: "unlink", Desc: "call the unlink function", Type: "optional"},
		{Name: "uucp", Desc: "system-to-system copy", Type: "optional"},
		{Name: "uustat", Desc: "uucp status enquiry and job control", Type: "optional"},
		{Name: "uux", Desc: "remote command execution", Type: "optional"},
		{Name: "val", Desc: "validate SCCS files", Type: "optional"},
		{Name: "vi", Desc: "screen-oriented (visual) display editor", Type: "optional"},
		{Name: "what", Desc: "identify SCCS files", Type: "optional"},
		{Name: "yacc", Desc: "yet another compiler compiler", Type: "optional"},
		{Name: "zcat", Desc: "expand and concatenate data", Type: "optional"},
	}
}

// IsBuiltInCommands return whether command is shell built-in one or not
func IsBuiltInCommands(cmd Command) bool {
	return cmd.Type == "shell built-in"
}
